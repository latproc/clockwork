# this file simply demonstrates various forms of expression
# in stable state evaluation and in event handlers/commands.

val VARIABLE 7;
 
ExprTest  MACHINE  {
    y WHEN val.VALUE % 2 == 1 && 1==1 && 1==2 || 2==2 && 3==2;
    w WHEN 4*3 == val+4;
    x WHEN (2*3) == (val+4);
    a WHEN val IS 1;
    b WHEN  val IS  last +1;
    
    ENTER a { 
        LOG "ENTER state a"; 
        last := 2;
        val := val + 1;
		x := 5 / 2;
    }
    ENTER x { 
        LOG "ENTER state x";
        val := val + 1; 
    }
    ENTER b { LOG "ENTER state b" }

    ENTER INIT { last := 1; val := 1; }
}
expr_test  ExprTest(tab:Tests);

NegativeVariableTest MACHINE { OPTION k 3; ok WHEN -k == -3; failed DEFAULT; } 
negative_variable_test NegativeVariableTest;

Calc MACHINE {
    OPTION a 5;
    OPTION b 3;

    ENTER INIT {
        x := a + b;
        c := a | b;
        d := a & b;
        e := a ^ b;
        f := !a;
        g := 3 & (-1^1);
        h := -1^1;
        i := 15 % 4
    }
}
calc Calc(tab:Tests);
