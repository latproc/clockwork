
BasicTimer MACHINE {
    OPTION startup_enabled FALSE;
    off WHEN TIMER>3000;
    on INITIAL;
}
BasicFollower MACHINE timer {
   on WHEN timer.TIMER > 1000;
   off DEFAULT;
}
basicFollower BasicFollower basicTimer;

LongTimer MACHINE {
    OPTION duration 10000; # default to 10 secs
    triggered WHEN TIMER > 3600000; # one hour
    waiting INITIAL;
}
basicTimer BasicTimer(tab:Test);
basicTimer1 BasicTimer(tab:Test);
basicTimer2 BasicTimer(tab:Test);
f1 FLAG(tab:Test);
f2 FLAG(tab:Test);
f3 FLAG(tab:Test);
one_hour LongTimer(duration:3600000, tab:Test); # one hour timer

Timer MACHINE (timeout:1) {
	expired WHEN SELF IS expired || (SELF IS running && TIMER >= timeout);
	running STATE;
	stopped INITIAL;

	COMMAND start { }
	TRANSITION expired,stopped TO running ON start;
	TRANSITION running,expired,stopped TO stopped ON reset;
}

s_timer Timer(tab:Test, timeout:2500);
SimpleTest MACHINE timer {
    Start STATE;
    Done WHEN timer IS expired;
    TRANSITION INIT TO Start ON go;
    COMMAND go { SEND start TO timer }
}

s_test SimpleTest(tab:Test) s_timer;

Tester MACHINE {

timer Timer(tab:Test,timeout:1);

	one WHEN timer IS running && timer.TIMER < 1000;
	two WHEN timer IS running && timer.TIMER < 2000;
	three WHEN timer IS running && timer.TIMER < 3000;
	done WHEN timer IS  expired;
    Ready DEFAULT;
	COMMAND start { 
		timer.timeout := 3000;
		SEND start TO timer;
	}
    ENTER one { LOG "one"; }
    ENTER two { LOG "two"; }
    ENTER three { LOG "three"; }
	RECEIVE timer.expired_enter { LOG "expired"; }
	RECEIVE timer.running_enter { LOG "running"; }
    ENTER Ready { LOG "ready";  }
	TRANSITION Ready TO Ready ON start;
    ENTER done { LOG "done"; }
}

test Tester(tab:Test);

