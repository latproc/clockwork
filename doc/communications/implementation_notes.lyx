#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1cm
\topmargin 1cm
\rightmargin 1cm
\bottommargin 2cm
\headheight 1cm
\headsep 1cm
\footskip 1cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Implementation Notes
\end_layout

\begin_layout Subsection
Threads
\end_layout

\begin_layout Itemize
Processing
\end_layout

\begin_deeper
\begin_layout Itemize
watches for messages from other threads
\end_layout

\begin_layout Itemize
processes machines
\end_layout

\end_deeper
\begin_layout Itemize
Scheduler
\end_layout

\begin_layout Itemize
Dispatcher
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
pull message from queue
\end_layout

\begin_layout Itemize
if the message is a command, execute it and return the result - use inproc:
 messages?
\end_layout

\begin_layout Itemize
identify channels message is destined for
\end_layout

\begin_layout Itemize
send message
\end_layout

\end_deeper
\begin_layout Itemize
Channels
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
proxy for new channels
\end_layout

\begin_layout Itemize
add CHANNEL command (done)
\end_layout

\begin_layout Itemize
when channel is instantiated, update publish flags on machineinstances
\end_layout

\begin_layout Itemize
start a publisher to send state/property changes
\end_layout

\begin_layout Itemize
start a command interface to receive state/property changes
\end_layout

\begin_layout Itemize
remove publisher/command threads when the connection closes
\end_layout

\end_deeper
\begin_layout Itemize
create a channel dynamically
\end_layout

\begin_layout Itemize
send to MachineInstance should queue messages until next state process
\end_layout

\begin_layout Section
Miscellaneous
\end_layout

\begin_layout Subsection*
monitoring - publishing from sever
\end_layout

\begin_layout Itemize
match monitors expressions - when to do this
\end_layout

\begin_layout Itemize
add listeners for channels that are instantiated at the server end
\end_layout

\begin_layout Itemize
add a means of adding a device to multiple channels
\end_layout

\begin_layout Itemize
add code to only publish events/messages that are in the interface
\end_layout

\begin_layout Itemize
add code to check incoming messages against an interface
\end_layout

\begin_layout Subsection*
updating - listening at the server
\end_layout

\begin_layout Itemize
add machines to proxy remotely update machines
\end_layout

\begin_layout Itemize
incoming messages are retransmitted by the proxy
\end_layout

\begin_layout Itemize
state changes are also applied to the proxy
\end_layout

\begin_layout Subsection
Version 1.1
\end_layout

\begin_layout Itemize
implement identifier check algorithm
\end_layout

\begin_layout Itemize
implement version check warning
\end_layout

\begin_layout Subsection*
notes
\end_layout

\begin_layout Itemize
does adding dynamic machine instantiation break anything?
\end_layout

\begin_layout Itemize
channels that are created by instantiating a configured machine setup a
 subscription for the remote machine(s)
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
channels that are instantiated to satisfy a request do not setup a subscription
 unless the channel has an UPDATES statement
\end_layout

\end_deeper
\begin_layout Itemize
a channel that is instantiated in a clockwork program only subscribes to
 changes if the channel includes a monitors statement.
\end_layout

\begin_layout Itemize
each channel has a set of machines for incoming messages and outgoing messages
\end_layout

\begin_layout Itemize
need to dermine a method for allocating ports for new channels
\end_layout

\begin_layout Itemize
machine lists are implemented via the MachineRef class and include a name,
 reference to a matching machine and an interface specification if one is
 known
\end_layout

\begin_layout Itemize
example of creating a channel
\end_layout

\begin_layout LyX-Code

\size small
Channel *my_channel = Channel::create(10400, Channel::find(
\begin_inset Quotes eld
\end_inset

ScalesChannel
\begin_inset Quotes erd
\end_inset

));
\end_layout

\begin_layout Itemize
channels can be created with port == 0 to allocate a new port automatically
\end_layout

\begin_layout Itemize
channels must be created on the dispatcher thread
\end_layout

\begin_layout Itemize
on program start, clockwork makes a channel for iosh only (once the other
 channels are converted)
\end_layout

\begin_layout Itemize
example of the iosh channel specification
\end_layout

\begin_layout LyX-Code
SHELL CHANNEL { RECEIVES /*/ }
\end_layout

\begin_layout Itemize
creating a channel shall automatically add it to the list of channels
\end_layout

\begin_layout Itemize
the shell channel should be a machine; dynamic actions would enable scripting
\end_layout

\begin_layout Itemize
should channels be started when they are found as the program loads or at
 the 'startup' point?
\end_layout

\begin_layout Itemize
interfaces must be known to the server at the time of instantiation of the
 channel
\end_layout

\begin_layout Section
Done
\end_layout

\begin_layout Itemize
add code to test publish flags before transmission
\end_layout

\begin_layout Itemize
upgrade to zmq 4.0: 
\end_layout

\begin_layout Itemize
no code changes are strictly necessary
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
revisit send() in MessagingInterface
\end_layout

\end_deeper
\begin_layout Itemize
add flags to MachineInstance items to indicate they are being published
\end_layout

\begin_layout Itemize
generate unused port id
\end_layout

\begin_layout Itemize
test if port is in use
\end_layout

\end_body
\end_document
